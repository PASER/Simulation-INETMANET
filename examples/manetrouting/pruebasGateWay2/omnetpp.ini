[General]
#debug-on-errors = true
sim-time-limit = 3000s
output-scalar-file-append = true
#network = inet.examples.adhoc.pruebasGateWay.Grid_mesh3
network = inet.examples.manetrouting.pruebasGateWay2.redSimple
num-rngs = 2
cmdenv-status-frequency = 2000s

cmdenv-express-mode = true
tkenv-plugin-path = ../../../Etc/plugins
#tkenv-default-run=1

description = "Aodv Simple test"

**.vector-recording = false
*.numFixHosts = 5
#*.numHosts=20
#**.numHostsUpper=50
**.numHostsLower=40
#*.numBasic=35
*.numBasic=0
**.debug = true
**.coreDebug = false
**.gateWay.wlan[0].radio.channelNumber = 0
**.fixhostA[*].wlan[0].radio.channelNumber = 0
**.wlan[0].radio.channelNumber = 1
**.wlanMesh.radio.channelNumber = 0
**.channelNumber = 0

**.hostLower[*].mobilityType = "inet.mobility.models.RandomWPMobility"

# mobility
#**.host*.mobilityType = "inet.mobility.RestrictedConstSpeedMobility"
**.hostUpper[*].mobility.constraintAreaMinX = 0
**.hostUpper[*].mobility.constraintAreaMinY = 0
**.hostUpper[*].mobility.constraintAreaMaxX = 1000
**.hostUpper[*].mobility.constraintAreaMaxY = 1000


**.hostLower[*].mobility.constraintAreaMinX = 0
**.hostLower[*].mobility.constraintAreaMinY = 0
**.hostLower[*].mobility.constraintAreaMaxX = 1245
**.hostLower[*].mobility.constraintAreaMaxY = 630

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMaxX = 1245m
**.constraintAreaMaxY = 630m

**.hostLower[*].mobility.speed = uniform(1mps, 2mps)
**.hostLower[*].mobility.waitTime = uniform(1s,120s)

#**.host*.mobility.updateInterval = 0.1
**.hostLower[*].mobility.updateInterval = 0.1s

# udp apps (on)
# general parameters

# udp apps (on)
**.udpApp[0].typename = "UDPBasicBurst"
**.fixhost[*].numUdpApps = 1

**.fixhost[0].udpApp[0].destAddresses = "gateWay"
**.fixhost[*].udpApp[0].destAddresses = ""

**.udpApp[0].localPort = 1234
**.udpApp[0].destPort = 1234
**.udpApp[*].messageLength = 512B
**.udpApp[*].sendInterval = 0.5s + uniform(-0.001s,0.001s)
**.udpApp[*].chooseDestAddrMode = "perSend"
**.udpApp[*].burstDuration = uniform(20s,40s,1)
**.udpApp[*].sleepDuration = 0
**.udpApp[*].stopTime = 0s
**.udpApp[*].startTime = uniform(20s,35s)
**.udpApp[*].delayLimit = 100s



#udp specific parameters
#**.hostLower[0..11].numUdpApps = 1
**.gateWay.numUdpApps=1
#**.hostUpper*.numUdpApps=1
**.numUdpApps=0  


#### Traffic destination

#gateway to mobile
**.gateWay.udpApp[0].destAddresses ="fixhost[0] "


#fix to gateway
**.hostUpper*.udpApp[0].destAddresses =""

#mobile to gateway
**.udpApp[0].destAddresses ="gateWay"


# los nodos mas alejados no contestan RREP
#**.wlan.mgmt.ProactiveFeedback=false
#**.fixhost4[0].wlan.mgmt.ProactiveFeedback=false
#**.fixhost4[1].wlan.mgmt.ProactiveFeedback=false
#**.fixhost5[0].wlan.mgmt.ProactiveFeedback=false
#**.fixhost5[1].wlan.mgmt.ProactiveFeedback=false
#**.fixhost2[0].wlan.mgmt.ProactiveFeedback=false
#**.fixhost3[0].wlan.mgmt.ProactiveFeedback=false


#configurator

**.fixhostB[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost2[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost3[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost4B[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost5B[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost6[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost7[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.gateWay*.autoconfigurator.interfaces = "wlanMesh wlan0 eth0"
**.fixhost[*].autoconfigurator.interfaces = "wlan0"


**.fixhostB[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost2[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost3[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost4B[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost5B[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost6[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost7[*].autoconfigurator.defaultInterface = "wlanMesh"
**.gateWay*.autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost[*].autoconfigurator.defaultInterface = "wlan0"

**.fixhostB[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost2[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost3[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost4B[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost5B[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost6[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost7[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.gateWay*.autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost[*].autoconfigurator.defaultAddressInterface = "wlan0"

**.fixhostB[*].autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0"
**.fixhost2[*].autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0"
**.fixhost3[*].autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0"
**.fixhost4B[*].autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0"
**.fixhost5B[*].autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0"
**.fixhost6[*].autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0"
**.fixhost7[*].autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0"
**.gateWay*.autoconfigurator.addressBaseList = "192.168.1.0 192.168.1.0 192.168.2.0"
**.fixhost[*].autoconfigurator.addressBaseList = "192.168.1.0"

**.fixhostB[*].autoconfigurator.addressMask = "255.255.255.0 255.255.255.0"
**.fixhost2[*].autoconfigurator.addressMask = "255.255.255.0 255.255.255.0"
**.fixhost3[*].autoconfigurator.addressMask = "255.255.255.0 255.255.255.0"
**.fixhost4B[*].autoconfigurator.addressMask = "255.255.255.0 255.255.255.0"
**.fixhost5B[*].autoconfigurator.addressMask = "255.255.255.0 255.255.255.0"
**.fixhost6[*].autoconfigurator.addressMask = "255.255.255.0 255.255.255.0"
**.fixhost7[*].autoconfigurator.addressMask = "255.255.255.0 255.255.255.0"
**.gateWay*.autoconfigurator.addressMask = "255.255.255.0 255.255.255.0  255.255.255.0"
**.fixhost[*].autoconfigurator.addressMask = "255.255.255.0"

**.udpApp[0].destAddresses=""
**.udpApp[1].destAddresses=""


# tcp apps (off)
**.numTcpApps = 0
**.tcpAppType = "TelnetApp"

# ping app (host[0] pinged by others)
# ping app (off)
**.pingApp.destAddr = ""
**.pingApp.srcAddr = ""
**.pingApp.packetSize = 56B
**.pingApp.interval = 1s
**.pingApp.hopLimit = 32
**.pingApp.count = 0
**.pingApp.startTime = 1s
**.pingApp.stopTime = 0
**.pingApp.printPing = true


# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 14336  # 14*mss
**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.tcpAlgorithmClass = "TCPReno"
**.tcp.recordStats = true
**.tcp.sackSupport = true   # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


# ip settings
**.routingFile = ""
**.ip.procDelay = 10us
# **.IPForward=false

# ARP configuration
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
**.arp.globalARP = true
#**.networklayer.proxyARP = true  # Host's is hardwired "false"

# manet routing
**.manetrouting.manetmanager.routingProtocol=""
#**.routingProtocol.use-default=yes


# nic settings
**.wlan*.mgmt.frameCapacity = 10
#**.wlan.mgmt.Willingness = 3
#**.wlan.mgmt.Hello_ival = 2
#**.wlan.mgmt.Tc_ival = 5
#**.wlan.mgmt.Mid_ival = 5
#**.wlan.mgmt.use_mac = false


**.hasLocator = true

# nic settings
**.mac.EDCA = false
**.wlan*.mac.address = "auto"
**.wlan*.mac.maxQueueSize = 14
**.wlan*.mac.rtsThresholdBytes = 3000B
**.wlan*.mac.bitrate = 54Mbps
**.wlan*.mac.basicBitrate = 6Mbps  # 24Mbps
**.wlan*.mac.retryLimit = 3 #************************************************num of retrasmission before link break!!!!!
**.wlan*.mac.cwMinData = 31
**.wlan*.mac.cwMinBroadcast = 31
**.wlan*.mac.opMode = 2 # 802.11g
**.wlan*.mac.slotTime = 9us #
**.wlan*.mac.AIFSN = 2 #DIFS
**.wlan*.radio.transmitterPower=2.0mW
**.wlan*.radio.pathLossAlpha=2 ##################################################################
**.wlan*.radio.snirThreshold = 4dB  # in dB
**.wlan*.radio.bitrate=54Mbps
**.wlan*.radio.thermalNoise=-110dBm
**.wlan*.radio.sensitivity=-90dBm
#**.wlan*.radio.sensitivity=-77dBm
**.wlan*.radio.phyOpMode = "g" #1/2  802.11b/802.11g-only
**.wlan*.radio.channelModel = "RAYLEIGH" #1/2  rayleigh/awgn
#MY COMMENT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#**.wlan[*].radio.berTableFile="/home/luca/per_table_80211g_Trivellato.dat"
**.wlan*.radio.berTableFile="per_table_80211g_Trivellato.dat"

# channel physical parameters
*.channelControl.carrierFrequency = 2.4GHz
*.channelControl.pMax = 2.0mW
*.channelControl.sat = -110dBm
*.channelControl.alpha = 2
*.channelControl.numChannels = 2

*.channelControl.propagationModel="TwoRayGroundModel"
**.drawCoverage=false


#**.use-default=yes

# proccesing delay in the routing protocol, avoid syncronization
**.broadcastDelay = uniform(0s,0.01s) # 10 mseconds 
**.unicastDelay = uniform(0s,0.005s)

#/ parameters : DYMOUM
#**.no_path_acc_ = false
**.no_path_acc_ = true
**.reissue_rreq_ = false
**.s_bit_ = false
**.hello_ival_ = 0
**.MaxPktSec = 20 #// 10
**.promiscuous = false
#**.NetDiameter = 10
**.NetDiameter = 30
**.RouteTimeOut = 3000
**.RouteDeleteTimeOut = 3000*5 #//5*RouteTimeOut
**.RREQWaitTime = 1000
**.RREQTries =3
**.noRouteBehaviour=1

#// Olsr
**.Willingness=3
**.Hello_ival=2
**.Tc_ival=5
**.Mid_ival=5
**.use_mac =0 #1
**.Mpr_algorithm =  1
**.routing_algorithm =   1
**.Link_quality = 2
**.Fish_eye = false
**.Tc_redundancy =    3
**.Link_delay = true #//default false
**.C_alpha=0.2

**.gateWay*.wlanMesh.mgmt.IsGateWay = false
seed-set = 1
seed-set = 1


